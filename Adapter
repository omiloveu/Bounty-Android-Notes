package com.example.omi.my_note;

import android.content.Context;
import android.content.Intent;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.support.v7.widget.RecyclerView;
import android.util.TypedValue;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.animation.Animation;
import android.view.animation.AnimationUtils;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;

import java.util.ArrayList;
import java.util.Collections;

/**
 * Created by OMI on 9/13/2015.
 */
public class VivzAdapter extends RecyclerView.Adapter<VivzAdapter.ViewHolderCar> {
    private ArrayList<DataBean> mNotesArrayList=new ArrayList<>();

    private LayoutInflater mInflater;
    private int lastPosition=-1;
    private String title;
    private String note;
    private int month;
    private int day;
    private int year;
    private byte[] img;
    private SQLiteDatabase db;
    Context context;

    public VivzAdapter(Context context){
       // mInflater = (LayoutInflater)context.getSystemService (Context.LAYOUT_INFLATER_SERVICE);
        mInflater=LayoutInflater.from(context);

        this.context=context;

    }

    public void delete(int position,View view){
        if(mNotesArrayList!=null && mNotesArrayList.size()!=0) {

           DataBean current = mNotesArrayList.get(position);
            String titl = current.getTitle();
            db = view.getContext().openOrCreateDatabase("NoteDB", android.content.Context.MODE_PRIVATE, null);
            db.execSQL("DELETE FROM mynote WHERE title='" + titl + "'");
            db.execSQL("DELETE FROM image WHERE title='" + titl + "'");
            mNotesArrayList.remove(position);
            notifyItemRemoved(position);
        }
    }

    public void edit(int position,View view){
        DataBean current1=mNotesArrayList.get(position);
        int id=current1.getId();
        String titl1=current1.getTitle();
        String note1=current1.getNote();
        int fontC=current1.getFontColor();
        int backC=current1.getBackColor();

        Intent intent=new Intent(view.getContext(),MainActivity.class);

        Bundle b=new Bundle();
        b.putInt("id",id);
        b.putString("title",titl1);
        b.putString("note", note1);
        b.putInt("fontC", fontC);
        b.putInt("backC", backC);

        db = view.getContext().openOrCreateDatabase("NoteDB", android.content.Context.MODE_PRIVATE, null);
        Cursor cursor=db.rawQuery("SELECT * FROM image WHERE title='"+titl1+"'",null);
        if(cursor!=null && cursor.moveToNext()) {
            img = cursor.getBlob(2);
        }
        b.putByteArray("image", img);
        intent.putExtras(b);
       // db.execSQL("DELETE FROM mynote WHERE title='" + titl1 + "'");
      //  db.execSQL("DELETE FROM image WHERE title='" + titl1 + "'");

        //mNotesArrayList.remove(position);
       // notifyItemRemoved(position);
        view.getContext().startActivity(intent);


    }


    public void setNotesArrayList(ArrayList<DataBean> mNotesArrayList,int position){

        this.mNotesArrayList=mNotesArrayList;

       //lastPosition=position;
        Collections.reverse(mNotesArrayList);
     //  notifyItemRangeChanged(0, mNotesArrayList.size());
       notifyItemInserted(position);
    }

    @Override
    public ViewHolderCar onCreateViewHolder(ViewGroup parent, int viewType) {
       View view=mInflater.inflate(R.layout.custom_row, parent, false);

        ViewHolderCar viewHolder=new ViewHolderCar(view);

        return viewHolder;
    }

    @Override
    public void onBindViewHolder(final ViewHolderCar holder,int position) {

        DataBean currentData=mNotesArrayList.get(position);

       // holder.mTitle.setText(currentData.getTitle());

         day = currentData.getDay();
         month = currentData.getMonth();
         year = currentData.getYear();
         holder.mNote.setText(currentData.getNote());
         String note1 = currentData.getNote();

         if (note1.trim().length() <= 7) {
             holder.mNote.setTextSize(TypedValue.COMPLEX_UNIT_SP, 54);
         } else if (note1.trim().length() <= 20) {
             holder.mNote.setTextSize(TypedValue.COMPLEX_UNIT_SP, 40);
         }

         holder.mRelativeLayout.setBackgroundColor(currentData.backColor);
         holder.mNote.setTextColor(currentData.fontColor);
         // holder.mTitle.setTextColor(currentData.fontColor);
         // holder.mDate.setTextColor(currentData.fontColor);
         // holder.mDate.setText(day + "/" + month + "/" + year);




                setAnimation(holder.mRelativeLayout, position);


    }

    private void setAnimation(View viewToAnimate, int position) {

        if(position>lastPosition) {
            Animation animation = AnimationUtils.loadAnimation(context, R.anim.push_left_in);
            animation.setDuration(1000);
            viewToAnimate.startAnimation(animation);
            lastPosition = position;
        }
    }



    @Override
    public int getItemCount() {
        return mNotesArrayList.size();
    }

     class ViewHolderCar extends RecyclerView.ViewHolder implements View.OnClickListener{


        //private TextView mTitle;
        private TextView mNote;
       // private TextView mDate;
         private ImageView mDel;
         private ImageView mEdit;
         private RelativeLayout mRelativeLayout;
        public ViewHolderCar(View itemView){
            super(itemView);
           // mImageView= (ImageView) itemView.findViewById(R.id.carImage);
          //  mTitle= (TextView) itemView.findViewById(R.id.noteTitle);
            mNote= (TextView) itemView.findViewById(R.id.noteValue);
           // mDate= (TextView) itemView.findViewById(R.id.noteDate);
            mDel= (ImageView) itemView.findViewById(R.id.delete);
            mEdit= (ImageView) itemView.findViewById(R.id.edit);
            mRelativeLayout= (RelativeLayout) itemView.findViewById(R.id.layBackColor);

            mDel.setOnClickListener(this);
            mEdit.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View view) {
                 edit(getAdapterPosition(),view);
                }
            });
        }

        @Override
        public void onClick(View view) {
            delete(getAdapterPosition(),view);

        }
    }


}
