package com.example.omi.my_note;

import android.content.Context;
import android.content.Intent;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.RecyclerView;
import android.support.v7.widget.StaggeredGridLayoutManager;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.ImageView;
import android.widget.TextView;

import java.util.ArrayList;

public class Main2Activity extends AppCompatActivity {
    private int count=0;
    private ArrayList<DataBean> getlist=new ArrayList<>();
    private SQLiteDatabase db;
    private Context context;
    public static final String TAG=MainActivity.class.getSimpleName();
    public RecyclerView mRecyclerView;
    private VivzAdapter mAdapter;
    private TextView create;
    private ImageView mAdd;
    private StaggeredGridLayoutManager mStaggeredGridLayoutManager;
    Bundle b1;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main2);

       mAdd= (ImageView) findViewById(R.id.add);
       create= (TextView) findViewById(R.id.create);
        mAdd.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Intent intent = new Intent(Main2Activity.this, MainActivity.class);
                startActivity(intent);
            }
        });




        mRecyclerView= (RecyclerView) findViewById(R.id.drawableList);
    /*    mRecyclerView.setItemAnimator(new ScaleInLeftAnimator());
        mRecyclerView.getItemAnimator().setMoveDuration(1000);
        mRecyclerView.getItemAnimator().setAddDuration(1000);
        mRecyclerView.getItemAnimator().setMoveDuration(1000);
        mRecyclerView.getItemAnimator().setRemoveDuration(1000);
        mRecyclerView.getItemAnimator().setMoveDuration(1000);
        mRecyclerView.getItemAnimator().setChangeDuration(1000);*/
        mRecyclerView.setHasFixedSize(true);
        mStaggeredGridLayoutManager=new StaggeredGridLayoutManager(2,1);
       //  mRecyclerView.setLayoutManager(new StaggeredGridLayoutManager(2,1));
       // mStaggeredGridLayoutManager.setReverseLayout(true);
        mRecyclerView.setLayoutManager(mStaggeredGridLayoutManager);
        //mRecyclerView.setLayoutManager(new LinearLayoutManager(Main2Activity.this));
        mAdapter=new VivzAdapter(Main2Activity.this);
        mRecyclerView.setAdapter(mAdapter);


            getlist = getAllData();
            mAdapter.setNotesArrayList(getlist,count);


    }


    public ArrayList<DataBean> getAllData(){
        ArrayList<DataBean> list = new ArrayList<>();
        db = openOrCreateDatabase("NoteDB", Context.MODE_PRIVATE, null);
        db.execSQL("CREATE TABLE IF NOT EXISTS mynote" +
                "(id INTEGER PRIMARY KEY AUTOINCREMENT,title VARCHAR NOT NULL," +
                "note VARCHAR NOT NULL,day INT,month INT,year INT,hour INT," +
                "minute INT,fontColor INT,backColor INT);");
       // Cursor cursor1=db.rawQuery("SELECT COUNT(*) FROM mynote", null);
       // count=cursor1.getInt(0);
        Cursor cursor=db.rawQuery("SELECT * FROM mynote", null);
        while (cursor.moveToNext()) {
            int id=cursor.getInt(0);
            String title = cursor.getString(1);
            String note=cursor.getString(2);
            Log.d(TAG,"note:"+note);
            int day=cursor.getInt(3);
            int month=cursor.getInt(4);
            int year=cursor.getInt(5);
            int hour=cursor.getInt(6);
            int minute = cursor.getInt(7);
            int backColor=cursor.getInt(8);
            int fontColor=cursor.getInt(9);
            DataBean data = new DataBean();
            data.setId(id);
            data.setTitle(title);
            data.setNote(note);
            data.setDay(day);
            data.setMonth(month);
            data.setYear(year);
            data.setHour(hour);
            data.setMinute(minute);
            data.setBackColor(backColor);
            data.setFontColor(fontColor);
            count++;
          //  Log.d(TAG,"count"+count);
            list.add(data);
        }
        return list;
    }


    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_main2, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }
}
